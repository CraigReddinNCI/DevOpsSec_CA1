name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to Brakeman
        run: chmod +x bin/brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bundle exec brakeman --no-pager

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to RuboCop
        run: chmod +x bin/rubocop

      - name: Lint code for consistent style
        run: bundle exec rubocop -f github

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips sqlite3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to Rails
        run: chmod +x bin/rails

      - name: Run tests
        env:
          RAILS_ENV: test
        run: bundle exec rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Environment Variables
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROJECT_KEY }}

      - name: Save the SSH key
        run: echo "$AWS_SECRET_ACCESS_KEY" > PROJECT_KEY.pem

      - name: Set permissions to use the key
        run: chmod 600 PROJECT_KEY.pem

      - name: Set EC2 instance details
        run: |
          INSTANCE_ID=${{ secrets.INSTANCE_ID }}
          PUBLIC_IP=${{ secrets.PUBLIC_IP }}

      - name: SSH into EC2 and deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i PROJECT_KEY.pem ubuntu@$PUBLIC_IP << 'EOF'
          set -e
          cd /home/ubuntu/DEVOPSSEC_CA1
          git pull origin master
          pkill -f "rails server" || true
          sudo apt-get update
          sudo apt-get install -y ruby-dev build-essential
          sudo bundle install && sudo bundle update
          rails db:migrate
          EOF

      - name: Clean up SSH key
        run: rm -f backendKey.pem
