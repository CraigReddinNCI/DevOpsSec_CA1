name: CI/CD
on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to Brakeman
        run: chmod +x bin/brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bundle exec brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    needs: [scan_ruby]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to RuboCop
        run: chmod +x bin/rubocop

      - name: Lint code for consistent style
        run: bundle exec rubocop -f github

  test:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint]

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips sqlite3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to Rails
        run: chmod +x bin/rails

      - name: Run tests
        env:
          RAILS_ENV: test
        run: bundle exec rails db:test:prepare test test:system

  docker:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.TOKEN }}" | sudo docker login ghcr.io -u "${{ secrets.USERNAME }}" --password-stdin


      #comment    
      - name: Build Docker image
        run: sudo docker build -t ghcr.io/${{ secrets.USERNAME }}/${{ secrets.IMAGE }}:latest .

      - name: Push Docker image to GHCR
        run: sudo docker push ghcr.io/${{ secrets.USERNAME }}/${{ secrets.IMAGE }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint, test, docker]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Save the SSH key
        run: echo "${{ secrets.PROJECT_KEY }}" > PROJECT_KEY.pem && chmod 600 PROJECT_KEY.pem

      - name: Deploy to EC2
        env:
          PUBLIC_IP: ${{ secrets.PUBLIC_IP }}
          USER_EC2: ${{ secrets.USER_EC2 }}
          PORT: ${{ secrets.PORT }}
        run: |
          ssh -o StrictHostKeyChecking=no -i PROJECT_KEY.pem $USER_EC2@$PUBLIC_IP << 'EOF'
          set -e
          sudo docker system prune -a -f
          sudo docker pull ghcr.io/${{ secrets.USERNAME }}/${{ secrets.IMAGE }}:latest
          sudo docker stop ${{ secrets.IMAGE }} || true
          sudo docker rm ${{ secrets.IMAGE }} || true

          sudo systemctl enable nginx
          sudo systemctl restart nginx

          sudo docker run -d -p $PORT:$PORT \
            -e RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }} \
            --name ${{ secrets.IMAGE }} \
            ghcr.io/${{ secrets.USERNAME }}/${{ secrets.IMAGE }}:latest

          sudo docker exec ${{ secrets.IMAGE }} bundle exec rails db:create
          sudo docker exec ${{ secrets.IMAGE }} bundle exec rails db:migrate
          sudo docker exec ${{ secrets.IMAGE }} bundle exec rails db:seed
          
          EOF

      - name: Clean up SSH key
        run: rm -f PROJECT_KEY.pem