name: CI/CD
on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to Brakeman
        run: chmod +x bin/brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bundle exec brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    needs: [scan_ruby]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to RuboCop
        run: chmod +x bin/rubocop

      - name: Lint code for consistent style
        run: bundle exec rubocop -f github

  test:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint]

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips sqlite3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Grant execution permissions to Rails
        run: chmod +x bin/rails

      - name: Run tests
        env:
          RAILS_ENV: test
        run: bundle exec rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  docker:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: |
          export USERNAME=${{ secrets.USERNAME }}
          export TOKEN=${{ secrets.TOKEN }}
          echo "${{ secrets.TOKEN }}" | sudo docker login ghcr.io -u "craig-reddin" --password-stdin


      #comment    
      - name: Build Docker image
        run: sudo docker build -t ghcr.io/craig-reddin/todo_api:latest .

      - name: Push Docker image to GHCR
        run: sudo docker push ghcr.io/craig-reddin/todo_api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint, test, docker]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Save the SSH key
        run: echo "${{ secrets.PROJECT_KEY }}" > PROJECT_KEY.pem && chmod 600 PROJECT_KEY.pem

      - name: Deploy to EC2
        env:
          PUBLIC_IP: ${{ secrets.PUBLIC_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no -i PROJECT_KEY.pem ubuntu@$PUBLIC_IP << 'EOF'
          set -e
          sudo docker system prune -a -f
          sudo docker pull ghcr.io/craig-reddin/todo_api:latest
          sudo docker stop todo_api || true
          sudo docker rm todo_api || true
          sudo docker run -p 3000:3000 \
            -e RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }} \
            --name todo_api \
            ghcr.io/craig-reddin/todo_api:latest

          
          sudo docker exec todo_api bundle exec rails db:migrate
          
          EOF

      - name: Clean up SSH key
        run: rm -f PROJECT_KEY.pem

          # cd /home/ubuntu/DevOpsSec_CA1
          # git pull origin main
          # sudo apt-get update && sudo apt-get install -y ruby-dev build-essential
          # bundle install
          # bundle exec rails db:migrate

          # # Ensure old Rails process is stopped and remove stale PID file
          # pkill -f "rails server" || true
          # if [ -f tmp/pids/server.pid ]; then
          #   rm tmp/pids/server.pid
          # fi
          
          #nohup rails server -b 0.0.0.0 -d